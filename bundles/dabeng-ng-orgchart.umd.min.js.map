{"version":3,"sources":["ng://@dabeng/ng-orgchart/lib/components/orgchart/shared/services/node-select.service.ts","ng://@dabeng/ng-orgchart/lib/components/orgchart/chart-container/chart-container.component.ts","ng://@dabeng/ng-orgchart/lib/components/orgchart/chart-node/chart-node.component.ts","ng://@dabeng/ng-orgchart/lib/components/orgchart/orgchart.module.ts"],"names":["NodeSelectService","this","subject","Subject","prototype","sendSelect","id","next","clearSelect","getSelect","asObservable","Injectable","ChartContainerComponent","nodeSelectService","nodeHeading","nodeContent","groupScale","pan","zoom","zoomoutLimit","zoominLimit","containerClass","chartClass","select","nodeClick","EventEmitter","chartClick","cursorVal","panning","startX","startY","transformVal","ngOnInit","panEndHandler","panHandler","e","newX","newY","targetTouches","length","pageX","pageY","indexOf","matrix","split","toString","join","panStartHandler","target","querySelectorAll","lastX","lastY","parseInt","setChartScale","newScale","targetScale","Math","abs","parseFloat","zoomHandler","deltaY","onClickChart","closest","emit","onNodeClick","nodeData","Component","args","selector","template","Input","Output","ChartNodeComponent","_this","Arr","Array","isCollapsed","subscription","subscribe","selection","isSelected","datasource","ngOnDestroy","unsubscribe","toggleChildren","toggleAnimStart","event","element","parentElement","classList","contains","previousElementSibling","add","ecStyles","display","toggleAnimEnd","remove","onClickNode","animations","trigger","state","style","transform","opacity","transition","animate","OrgchartModule","NgModule","declarations","imports","CommonModule","BrowserAnimationsModule","exports","providers"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class NodeSelectService {\n\n  private subject = new Subject<any>();\n\n  constructor() { }\n\n  sendSelect(id: string) {\n    this.subject.next({ id });\n  }\n\n  clearSelect() {\n    this.subject.next();\n  }\n\n  getSelect(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { NodeSelectService } from '../shared/services/node-select.service';\n\n@Component({\n  selector: 'organization-chart',\n  templateUrl: './chart-container.component.html',\n  styleUrls: ['./chart-container.component.css']\n})\nexport class ChartContainerComponent implements OnInit {\n\n  @Input() datasource;\n  @Input() nodeHeading = 'name';\n  @Input() nodeContent = 'title';\n  @Input() nodeTemplate: TemplateRef<any>;\n  @Input() groupScale = 3;\n  @Input() pan = false;\n  @Input() zoom = false;\n  @Input() zoomoutLimit = 0.5;\n  @Input() zoominLimit = 7;\n  @Input() containerClass = '';\n  @Input() chartClass = '';\n  @Input() select = 'single';\n\n  @Output() nodeClick = new EventEmitter<any>();\n  @Output() chartClick = new EventEmitter();\n\n  cursorVal = 'default';\n  panning = false;\n  startX = 0;\n  startY = 0;\n  transformVal = '';\n\n  constructor(private nodeSelectService: NodeSelectService) {}\n\n  ngOnInit() {\n  }\n\n  panEndHandler() {\n    this.panning = false;\n    this.cursorVal = 'default';\n  }\n\n  panHandler(e) {\n    let newX = 0;\n    let newY = 0;\n    if (!e.targetTouches) {\n      // pand on desktop\n      newX = e.pageX - this.startX;\n      newY = e.pageY - this.startY;\n    } else if (e.targetTouches.length === 1) {\n      // pan on mobile device\n      newX = e.targetTouches[0].pageX - this.startX;\n      newY = e.targetTouches[0].pageY - this.startY;\n    } else if (e.targetTouches.length > 1) {\n      return;\n    }\n    if (this.transformVal === '') {\n      if (this.transformVal.indexOf('3d') === -1) {\n        this.transformVal = 'matrix(1,0,0,1,' + newX + ',' + newY + ')';\n      } else {\n        this.transformVal =\n          'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,' + newX + ', ' + newY + ',0,1)';\n      }\n    } else {\n      const matrix = this.transformVal.split(',');\n      if (this.transformVal.indexOf('3d') === -1) {\n        matrix[4] = newX.toString();\n        matrix[5] = newY + ')';\n      } else {\n        matrix[12] = newX.toString();\n        matrix[13] = newY.toString();\n      }\n      this.transformVal = matrix.join(',');\n    }\n  }\n\n  panStartHandler(e) {\n    if (e.target.querySelectorAll('.node') && e.target.querySelectorAll('.node').length) {\n      this.panning = false;\n      return;\n    } else {\n      this.cursorVal = 'move';\n      this.panning = true;\n    }\n    let lastX = 0;\n    let lastY = 0;\n    if (this.transformVal !== '') {\n      const matrix = this.transformVal.split(',');\n      if (this.transformVal.indexOf('3d') === -1) {\n        lastX = parseInt(matrix[4], 10);\n        lastY = parseInt(matrix[5], 10);\n      } else {\n        lastX = parseInt(matrix[12], 10);\n        lastY = parseInt(matrix[13], 10);\n      }\n    }\n    if (!e.targetTouches) {\n      // pand on desktop\n      this.startX = e.pageX - lastX;\n      this.startY = e.pageY - lastY;\n    } else if (e.targetTouches.length === 1) {\n      // pan on mobile device\n      this.startX = e.targetTouches[0].pageX - lastX;\n      this.startY = e.targetTouches[0].pageY - lastY;\n    } else if (e.targetTouches.length > 1) {\n      return;\n    }\n  }\n\n  setChartScale(newScale) {\n    let matrix = [];\n    let targetScale = 1;\n    if (this.transformVal === '') {\n      this.transformVal =\n        'matrix(' + newScale + ', 0, 0, ' + newScale + ', 0, 0)';\n    } else {\n      matrix = this.transformVal.split(',');\n      if (this.transformVal.indexOf('3d') === -1) {\n        targetScale = Math.abs(parseFloat(matrix[3]) * newScale);\n        if (targetScale > this.zoomoutLimit && targetScale < this.zoominLimit) {\n          matrix[0] = 'matrix(' + targetScale;\n          matrix[3] = targetScale;\n          this.transformVal = matrix.join(',');\n        }\n      } else {\n        targetScale = Math.abs(parseFloat(matrix[5]) * newScale);\n        if (targetScale > this.zoomoutLimit && targetScale < this.zoominLimit) {\n          matrix[0] = 'matrix3d(' + targetScale;\n          matrix[5] = targetScale;\n          this.transformVal = matrix.join(',');\n        }\n      }\n    }\n  }\n\n  zoomHandler(e) {\n    const newScale = 1 + (e.deltaY > 0 ? -0.2 : 0.2);\n    this.setChartScale(newScale);\n  }\n\n  onClickChart(e) {\n    if (!e.target.closest('.oc-node')) {\n      this.chartClick.emit();\n      this.nodeSelectService.clearSelect();\n    }\n  }\n\n  onNodeClick(nodeData: any) {\n    this.nodeClick.emit(nodeData);\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Node } from '../shared/models/node.model';\nimport { NodeSelectService } from '../shared/services/node-select.service';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\n@Component({\n  selector: 'orgchart-node',\n  templateUrl: './chart-node.component.html',\n  styleUrls: ['./chart-node.component.css'],\n  animations: [\n    trigger('expandCollapse', [\n      state(\n        'expanded',\n        style({\n          transform: 'translateY(0)',\n          opacity: 1\n        })\n      ),\n      state(\n        'collapsed',\n        style({\n          transform: 'translateY(-50px)',\n          opacity: 0\n        })\n      ),\n      transition('expanded => collapsed', [animate('0.2s')]),\n      transition('collapsed => expanded', [animate('0.2s')])\n    ])\n  ]\n})\nexport class ChartNodeComponent implements OnInit {\n\n  @Input() datasource: Node;\n  @Input() nodeHeading;\n  @Input() nodeContent;\n  @Input() nodeTemplate: TemplateRef<any>;\n  @Input() groupScale: number;\n  @Input() select: string;\n\n  @Output() nodeClick = new EventEmitter<any>();\n\n  Arr = Array; // Array type captured in a variable\n  isCollapsed = false;\n  ecStyles: object;\n  isSelected: boolean;\n  subscription: Subscription;\n\n  constructor(private nodeSelectService: NodeSelectService) {\n    // subscribe to node selection status\n    this.subscription = this.nodeSelectService.getSelect().subscribe(selection => {\n      if (selection && selection.id) {\n        this.isSelected = this.datasource.id === selection.id;\n      } else { // clear selection when empty selection received\n        this.isSelected = false;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to ensure no memory leaks\n    this.subscription.unsubscribe();\n  }\n\n  ngOnInit() {\n  }\n\n  toggleChildren() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n  toggleAnimStart(event) {\n    if (this.isCollapsed) {\n      // å¦ææå çæ¯æ ¹ç»ç¹çå­èç¹ï¼é£ä¹æ ¹ç»ç¹åä¸çè¿æ¥çº¿éè¦éè\n      if (\n        event.element.parentElement &&\n        event.element.parentElement.parentElement &&\n        event.element.parentElement.parentElement.classList.contains('orgchart')\n      ) {\n        event.element.previousElementSibling.classList.add('oc-is-collapsed');\n      }\n    } else { // åä¸å±å¼çæ¶åï¼éè¦é©¬ä¸æå­èç¹ä»¬æ¾ç¤ºåºæ¥ï¼ä»¥ä¾¿çå°âä¸æ»âææ\n      this.ecStyles = {\n        display: 'flex'\n      };\n    }\n  }\n\n  toggleAnimEnd(event) {\n    if (this.isCollapsed) { // æå æ¶ï¼âä¸æ»âå¨ç»ç»æåï¼éè¦å°å­èç¹ä»¬éèï¼ä»¥ä¾¿å¶ä¸å ç¨ç©ºé´\n      this.ecStyles = {\n        display: 'none'\n      };\n    } else {\n      // å¦æå±å¼çæ¯æ ¹ç»ç¹çå­èç¹ï¼é£ä¹æ ¹ç»ç¹åä¸çè¿æ¥çº¿éè¦æ¾ç¤º\n      if (\n        event.element.parentElement &&\n        event.element.parentElement.parentElement &&\n        event.element.parentElement.parentElement.classList.contains('orgchart')\n      ) {\n        event.element.previousElementSibling.classList.remove('oc-is-collapsed');\n      }\n    }\n  }\n\n  onClickNode(e) {\n    this.nodeClick.emit(this.datasource);\n    if (this.select === 'single') {\n      this.nodeSelectService.sendSelect(this.datasource.id);\n    } else if (this.select === 'multiple') {\n      this.isSelected = !this.isSelected;\n    }\n  }\n\n  onNodeClick(e) {\n    this.nodeClick.emit(e);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ChartContainerComponent } from './chart-container/chart-container.component';\nimport { ChartNodeComponent } from './chart-node/chart-node.component';\nimport { NodeSelectService } from './shared/services/node-select.service';\n\n@NgModule({\n  declarations: [ChartContainerComponent, ChartNodeComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule\n  ],\n  exports: [ChartContainerComponent, ChartNodeComponent],\n  providers: [NodeSelectService],\n})\nexport class OrgchartModule { }\n"]}